package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexicoTiny;
import alex.UnidadLexica;
import errors.GestionErroresTiny;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private GestionErroresTiny errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErroresTiny();
   AnalizadorLexicoTiny alex = (AnalizadorLexicoTiny)getScanner();
   alex.fijaGestionErrores(errores);
:};


terminal     ENT, COMA, LISTAP, LISTCIERRE, PARAP, PARCIERRE, RED, MAP, FILTER, HASH, DIS, EQQ, MEN, MAY, MAS, MENOS, POR, DIV, IDEN, PRINT, EQ;

non terminal  S, L, Op1, Op2, Opa, Opr, Atom, Li, Ds, Exp;

S   ::= L | L S ;
L   ::= PRINT Exp | IDEN EQ Exp ;
Exp ::= RED Opa Op1 | MAP Opa ENT Op1 | FILTER Opr ENT Op1 | Op1;
Op1 ::= Op1 HASH Op2 | Op2 ;
Op2 ::= PARAP Exp PARCIERRE | Atom ;
Opa ::= MAS | MENOS | POR | DIV ;
Opr ::= DIS | EQQ | MEN | MAY ;
Atom::= Li | ENT | IDEN ;
Li  ::= LISTAP LISTCIERRE | LISTAP Ds LISTCIERRE ;
Ds  ::= Atom COMA Ds | Atom ;


